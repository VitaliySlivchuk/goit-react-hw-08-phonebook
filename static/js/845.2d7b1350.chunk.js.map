{"version":3,"file":"static/js/845.2d7b1350.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/SnackBar/SnakBar.js","components/Form/Form.js","components/Filter/Filter.js","components/EditModal/EditModal.js","components/ContactsItem/ContactsItem.js","webpack://react-homework-template/./src/components/Form/Form.module.css?89ba","components/ContactList/ContactList.js","components/Contacts/Contacts.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\n//атомарні\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectContactId = state => state.contacts.items.id;\nexport const selectValue = state => state.filter.value;\n//складові\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectValue],\n  (contacts, value) => {\n    const lowCaseFilter = value.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(lowCaseFilter)\n    );\n  }\n);\n","import { Snackbar, Stack, Alert } from '@mui/material';\n\nexport const SnakBar = ({ isShowSnak, setIsShowSnak, message }) => {\n  const handleClose = (_, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setIsShowSnak(false);\n  };\n\n  return (\n    <Stack spacing={2} sx={{ width: '100%' }}>\n      <Snackbar\n        open={isShowSnak}\n        autoHideDuration={3000}\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n        onClose={handleClose}\n      >\n        <Alert severity=\"error\" sx={{ width: '100%' }}>\n          {message}\n        </Alert>\n      </Snackbar>\n    </Stack>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { Container, Box, TextField, Button } from '@mui/material';\nimport { useState } from 'react';\nimport { SnakBar } from 'components/SnackBar/SnakBar';\n\nexport const Form = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [sneackText, setSneakText] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const data = new FormData(e.currentTarget);\n    const name = data.get('name');\n    const number = data.get('number');\n\n    const findSameName = contacts.find(\n      el => el.name.toLowerCase() === name.toLowerCase()\n    );\n    if (findSameName) {\n      e.target.reset();\n      setSneakText('This contact is on the phonebook');\n      setIsOpen(true);\n      return;\n    }\n    if (name.trim() === '' || number.trim() === '') {\n      setSneakText('Fill contact name or contact number field');\n      setIsOpen(true);\n      return;\n    }\n\n    dispatch(\n      addContact({\n        name,\n        number,\n      })\n    );\n    e.target.reset();\n  };\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <SnakBar\n        isShowSnak={isOpen}\n        setIsShowSnak={setIsOpen}\n        message={sneackText}\n      />\n      <Box\n        sx={{\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n          <TextField\n            margin=\"normal\"\n            fullWidth\n            id=\"name\"\n            label=\"Contact name\"\n            name=\"name\"\n            autoFocus\n          />\n          <TextField\n            margin=\"normal\"\n            fullWidth\n            name=\"number\"\n            label=\"Contact number\"\n            id=\"number\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            Add Contact\n          </Button>\n        </Box>\n      </Box>\n    </Container>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { findContact } from 'redux/contacts/filterSlice';\nimport { Container, Box, TextField } from '@mui/material';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const value = e.target.value;\n    dispatch(findContact(value));\n  };\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Box>\n        <Box component=\"form\" onChange={handleChange} noValidate sx={{ mt: 1 }}>\n          <TextField\n            margin=\"normal\"\n            fullWidth\n            id=\"filter\"\n            label=\"Filter contacts\"\n            name=\"filter\"\n            autoFocus\n          />\n        </Box>\n      </Box>\n    </Container>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { editContact } from 'redux/contacts/operations';\nimport { Modal, Container, Box, Button, TextField } from '@mui/material';\nimport { SnakBar } from 'components/SnackBar/SnakBar';\n\nexport const EditModal = ({\n  id,\n  isOpenModal,\n  setIsOpenModal,\n  setOpenModal,\n  name,\n  number,\n}) => {\n  const dispatch = useDispatch();\n  const [isShowShak, setIsShowShak] = useState(false);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const formData = new FormData(e.currentTarget);\n    const name = formData.get('name');\n    const number = formData.get('number');\n\n    if (number === '' || name === '') {\n      return setIsShowShak(true);\n    }\n    dispatch(\n      editContact({\n        id,\n        name,\n        number,\n      })\n    );\n    setOpenModal(false);\n  };\n  return (\n    <Modal\n      open={isOpenModal}\n      onClose={() => setIsOpenModal(!isOpenModal)}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <Box sx={style}>\n        <Container component=\"main\" maxWidth=\"xs\">\n          <Box\n            sx={{\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n            }}\n          >\n            <Box\n              component=\"form\"\n              onSubmit={handleSubmit}\n              noValidate\n              sx={{ mt: 1 }}\n            >\n              <TextField\n                margin=\"normal\"\n                fullWidth\n                id=\"name\"\n                label=\"Contact name\"\n                name=\"name\"\n                autoFocus\n              />\n              <TextField\n                margin=\"normal\"\n                fullWidth\n                name=\"number\"\n                label=\"Contact number\"\n                id=\"number\"\n              />\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n              >\n                Edit Contact\n              </Button>\n            </Box>\n          </Box>\n        </Container>\n        <SnakBar\n          isShowSnak={isShowShak}\n          setIsShowSnak={setIsShowShak}\n          message={'Fill the name or number field'}\n        />\n      </Box>\n    </Modal>\n  );\n};\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 4,\n};\n","import { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { IconButton, Box, Typography, Container } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport LocalPhoneIcon from '@mui/icons-material/LocalPhone';\n\nimport { deleteContact } from 'redux/contacts/operations';\nimport { EditModal } from 'components/EditModal/EditModal';\n\nconst ContactsItem = ({ contact: { id, name, number } }) => {\n  const dispatch = useDispatch();\n  const [isOpenNumber, setIsOpenNumber] = useState(false);\n  const [openModal, setOpenModal] = useState(false);\n\n  return (\n    <Container\n      sx={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px',\n      }}\n    >\n      <Box>\n        <IconButton\n          title=\"number\"\n          onClick={() => setIsOpenNumber(!isOpenNumber)}\n        >\n          <LocalPhoneIcon />\n        </IconButton>\n        {isOpenNumber && <Typography>{number}</Typography>}\n      </Box>\n      <Typography>{name}</Typography>\n\n      <Box>\n        <IconButton title=\"edit\" onClick={() => setOpenModal(!openModal)}>\n          <EditIcon />\n        </IconButton>\n        <IconButton title=\"delete\" onClick={() => dispatch(deleteContact(id))}>\n          <DeleteIcon />\n        </IconButton>\n      </Box>\n\n      <EditModal\n        id={id}\n        isOpenModal={openModal}\n        setIsOpenModal={setOpenModal}\n        setOpenModal={setOpenModal}\n        name={name}\n        number={number}\n      />\n    </Container>\n  );\n};\n\nexport default ContactsItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"app\":\"Form_app__pW3Wv\",\"form\":\"Form_form__e1yzW\",\"wrap\":\"Form_wrap__GT7q3\",\"button\":\"Form_button__8NOIT\",\"contactsWrap\":\"Form_contactsWrap__mAcXd\",\"contacts\":\"Form_contacts__GNrDb\",\"input\":\"Form_input__FTtTw\",\"ul\":\"Form_ul__cb8mS\",\"itembtn\":\"Form_itembtn__DBKn8\",\"wrapitem\":\"Form_wrapitem__zy43J\",\"liitem\":\"Form_liitem__xKD2H\"};","import ContactsItem from 'components/ContactsItem/ContactsItem';\n\nimport { useSelector } from 'react-redux';\n//selectors\nimport { selectFilteredContacts } from 'redux/contacts/selectors';\n//styles\nimport css from '../Form/Form.module.css';\n\nexport const ContactList = () => {\n  const filteredContacts = useSelector(selectFilteredContacts);\n\n  return (\n    <ul className={css.ul}>\n      {filteredContacts.map(contact => (\n        <li key={contact.id}>\n          <ContactsItem contact={contact} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectIsLoading, selectError } from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { Container } from '@mui/material';\n\nimport { Form } from '../Form/Form';\nimport { Filter } from '../Filter/Filter';\nimport { ContactList } from '../ContactList/ContactList';\nimport { Loader } from '../Loader/Loader';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      {isLoading && !error && <Loader />}\n      <Form />\n      <Container sx={{ width: 500 }}>\n        <Filter />\n        <ContactList />\n      </Container>\n    </Container>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilteredContacts","createSelector","filter","value","lowCaseFilter","toLowerCase","contact","name","includes","SnakBar","isShowSnak","setIsShowSnak","message","Stack","spacing","sx","width","Snackbar","open","autoHideDuration","anchorOrigin","vertical","horizontal","onClose","_","reason","Alert","severity","Form","dispatch","useDispatch","useSelector","useState","isOpen","setIsOpen","sneackText","setSneakText","Container","component","maxWidth","Box","marginTop","display","flexDirection","alignItems","onSubmit","e","preventDefault","data","FormData","currentTarget","get","number","find","el","target","reset","trim","addContact","noValidate","mt","TextField","margin","fullWidth","id","label","autoFocus","Button","type","variant","mb","Filter","onChange","findContact","EditModal","isOpenModal","setIsOpenModal","setOpenModal","isShowShak","setIsShowShak","Modal","style","formData","editContact","position","top","left","transform","bgcolor","border","boxShadow","p","isOpenNumber","setIsOpenNumber","openModal","justifyContent","IconButton","title","onClick","LocalPhone","Typography","Edit","deleteContact","Delete","ContactList","filteredContacts","className","css","map","Contacts","useEffect","fetchContacts","Loader"],"sourceRoot":""}