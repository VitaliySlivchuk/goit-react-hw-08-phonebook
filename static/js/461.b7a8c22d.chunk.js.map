{"version":3,"file":"static/js/461.b7a8c22d.chunk.js","mappings":"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","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","webpack://react-homework-template/./src/components/Form/Form.module.css?89ba","components/Form/Form.js","components/Filter/Filter.js","components/ContactsItem/ContactsItem.js","components/ContactList/ContactList.js","webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.js","components/Contacts/Contacts.js","../node_modules/clsx/dist/clsx.m.js"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\n//атомарні\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectContactId = state => state.contacts.items.id;\nexport const selectValue = state => state.filter.value;\n//складові\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectValue],\n  (contacts, value) => {\n    const lowCaseFilter = value.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(lowCaseFilter)\n    );\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"app\":\"Form_app__pW3Wv\",\"form\":\"Form_form__e1yzW\",\"wrap\":\"Form_wrap__GT7q3\",\"button\":\"Form_button__8NOIT\",\"contactsWrap\":\"Form_contactsWrap__mAcXd\",\"contacts\":\"Form_contacts__GNrDb\",\"input\":\"Form_input__FTtTw\",\"ul\":\"Form_ul__cb8mS\",\"itembtn\":\"Form_itembtn__DBKn8\",\"wrapitem\":\"Form_wrapitem__zy43J\",\"liitem\":\"Form_liitem__xKD2H\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nimport { toast } from 'react-toastify';\n\nimport css from '../Form/Form.module.css';\n\nexport const Form = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const name = e.target.elements.name.value;\n    const number = e.target.elements.number.value;\n\n    const findSameName = contacts.find(\n      el => el.name.toLowerCase() === name.toLowerCase()\n    );\n    if (findSameName) {\n      e.target.reset();\n      return toast.error(`${name} is already in contacts`);\n    }\n    const contact = { name, number };\n    dispatch(addContact(contact));\n    e.target.reset();\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <div className={css.wrap}>\n        <label>{'Name'}</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          autoComplete=\"off\"\n        />\n      </div>\n\n      <div className={css.wrap}>\n        <label>{'Number'}</label>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          autoComplete=\"off\"\n        />\n      </div>\n\n      <button type=\"submit\" className={css.button}>\n        Add contact\n      </button>\n    </form>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { findContact } from 'redux/contacts/filterSlice';\nimport css from '../Form/Form.module.css';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const handleFilterContacts = e => {\n    const value = e.target.value;\n    dispatch(findContact(value));\n  };\n  return (\n    <div className={css.contacts}>\n      <label>Find contacts by name</label>\n      <input\n        type=\"text\"\n        className={css.input}\n        onChange={handleFilterContacts}\n      ></input>\n    </div>\n  );\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\nimport css from 'components/Form/Form.module.css';\n\nconst ContactsItem = ({ contact: { id, name, number } }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <div className={css.liitem}>\n      <div>\n        <span>{name}: </span>\n        <span>{number}</span>\n      </div>\n\n      <button\n        className={css.itembtn}\n        onClick={() => dispatch(deleteContact(id))}\n      >\n        Delete\n      </button>\n    </div>\n  );\n};\n\nexport default ContactsItem;\n","import ContactsItem from 'components/ContactsItem/ContactsItem';\n\nimport { useSelector } from 'react-redux';\n//selectors\nimport { selectFilteredContacts } from 'redux/contacts/selectors';\n//styles\nimport css from '../Form/Form.module.css';\n\nexport const ContactList = () => {\n  const filteredContacts = useSelector(selectFilteredContacts);\n\n  return (\n    <ul className={css.ul}>\n      {filteredContacts.map(contact => (\n        <li key={contact.id}>\n          <ContactsItem contact={contact} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\",\"spinner\":\"Loader_spinner__iDFIv\"};","import styles from './Loader.module.css';\n\nexport const Loader = () => {\n  return (\n    <div className={styles.loader}>\n      <div className={styles.spinner}></div>\n    </div>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectIsLoading, selectError } from 'redux/contacts/selectors';\nimport { ToastContainer } from 'react-toastify';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nimport { Form } from '../Form/Form';\nimport { Filter } from '../Filter/Filter';\nimport { ContactList } from '../ContactList/ContactList';\nimport { Loader } from '../Loader/Loader';\n\nimport css from '../Form/Form.module.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={css.app}>\n      {isLoading && !error && <Loader />}\n      <Form />\n      <div className={css.contactsWrap}>\n        <Filter />\n        <ContactList />\n      </div>\n      <ToastContainer />\n    </div>\n  );\n};\n\nexport default Contacts;\n","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilteredContacts","filter","lowCaseFilter","toLowerCase","contact","includes","Form","dispatch","useDispatch","useSelector","className","css","onSubmit","e","preventDefault","target","elements","number","el","reset","toast","addContact","type","title","required","autoComplete","Filter","onChange","findContact","id","onClick","deleteContact","ContactList","filteredContacts","Loader","styles","useEffect","fetchContacts","r","t","f","n"],"sourceRoot":""}